$IMG_DIR : "/static/images/";

@mixin clearfix {
    zoom: 1;
    &:before, &:after { content: ""; display: table; }
    &:after { clear: both; }
}

@function image-url($src) {
    @return url($IMG_DIR + $src);
}

//Background image
@mixin bg-img($clr, $src, $src-retina: "", $repeat: no-repeat, $x: 0, $y: 0) {
    background: $clr image-url($src) $repeat $x $y;
    @if ($src-retina != "") {
        @include respond-to(retina) {
            background-image: image-url($src-retina);
        }
    }
}

// Media Queries
@mixin respond-to($media) {
  @if $media == handhelds {
    @media only screen and (max-width: 479px) { @content; }
  }
  @else if $media == wide-handhelds {
    @media only screen and (min-width: 480px) and (max-width: 767px) { @content; }
  }
  @else if $media == mobile {
      @media only screen and (max-width: 767px) { @content; }
  }
  @else if $media == tablets {
    @media only screen and (min-width: 767px) and (max-width: 1280px) {  @content;  }
  }
  @else if $media == small-screens {
    @media only screen and (min-width: 768px) and (max-width: 1280px) { @content; }
  }
  @else if $media == touch {
    @media only screen and (max-width: 1280px) { .touch & { @content; } }
  }
  @else if $media == retina {
      @media
      only screen and (-webkit-min-device-pixel-ratio: 1.5),
      only screen and (   min--moz-device-pixel-ratio: 1.5),    /* https://developer.mozilla.org/en/CSS/Media_queries */
      only screen and (     -o-min-device-pixel-ratio: 3/2),    /* http://dev.opera.com/articles/view/an-introduction-to-meta-viewport-and-viewport */
      only screen and (        min-device-pixel-ratio: 1.5),
      only screen and (                min-resolution: 192dpi),
      only screen and (                min-resolution: 1.5dppx) /* Refer: https://github.com/h5bp/html5-boilerplate/issues/1178 */
      { @content; }
  }
}

@mixin respond-to-width($min-width: false, $max-width: false) {
    @if $min-width and $max-width {
        @media only screen and (min-width: $min-width) and (max-width: $max-width) { @content; }
    }
    @else if $min-width {
        @media only screen and (min-width: $min-width) { @content; }
    }
    @else if $max-width {
        @media only screen and (max-width: $max-width) { @content; }
    }
}

@mixin font-smoothing() {
    -webkit-text-rendering: geometricPrecision;
    -moz-text-rendering: geometricPrecision;
    -ms-text-rendering: geometricPrecision;
    o-text-rendering: geometricPrecision;
    text-rendering: geometricPrecision;
    webkit-font-smoothing: antialiased;
    moz-font-smoothing: antialiased;
    ms-font-smoothing: antialiased;
    o-font-smoothing: antialiased;
    font-smoothing: antialiased;
}
